/* AT RULE 
    nos sirven para extender las capacidades de CSS
*/
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=MedievalSharp&family=Roboto+Condensed:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Ubuntu:wght@300;400;500;700&display=swap');

*, *::before, *::after{ /*ademas de todos los antes y despues*/
    /* reset css */
    box-sizing: border-box; /* Unificar todas la cajas contenedoras*/
    margin: 0; /*Espacio exterior*/
    padding: 0; /*Espacio interior*/
    font-family: 'Roboto Condensed', sans-serif; /*fuente*/
}

/* el PSEUDOELEMNTO RAÍZ representa
la raíz de nuestro proyecto, en este caso
es lo mismo que la etiqueta html 

usamos este elemento para definir variables de CSS
*/
:root{
    background-color: black;
    /* las variables se marcan con un '--' inicial */
    --negro : rgb(0, 0, 0);  
    --gris : rgba(255, 255, 255, .5);
    --violetaClaro : rgba(194, 153, 232, 0.7);
    --violeta : rgb(60, 6, 110);
    --azulFocus : rgb(11, 85, 243);
    --amarillo : rgb(215, 215, 74);
}


body{
    /* con CSS puedo poner poner imagens de fondo locales (o sea, que están en una carpeta del proyecto) o directamente desde una URL */
    background-image: url('../assets/background.jpg');
    
    /* la propiedad OPACITY marca la opacidad de un elemento */
    /* opacity: .4; */ /* ahora esta deshabilitada*/ /*todo lo que este dentro del body se opaca 0.4*/

    min-height: 100vh; /* min-height es altura minima de alto. 100vh 100 corresponde al total del vh (alto de pantalla)*/
    min-width: 100vw; /* min-width es altura minima de ancho. 100vw 100 corresponde al total de vw (ancho de pantalla)*/
    
    /* el contenido que se desborda de su caja se llama OVERFLOW */ /* es cuando se pone una barra de desplazamiento abajo*/
    overflow-x: hidden;

    /* POSITION es un atributo que nos ayuda a indicar como se ubica un elemento en el flujo del documento,
    ABSOLUTE saca a un elemento del flujo normal
    y RELATIVE lo pone en el flujo normal */
    position: absolute; /*significa que no se va a mover aunque se muevan las cosas de adentro*/
    top: 0;
}

.cabecera{
    /* usamos las variables con la funcion var() */
    color: var(--negro);
    text-align: center;
    background-color: var(--gris);
    border-radius: 5px;
    opacity: 1;
    margin: auto;
    margin-top: 15px;
    width: 80%;
}

/* 
    un PSEUDOELEMENTO es una ayuda para añadir contenido antes o después de un elemento html
*/

/*los emoji los podemos copias de la pagina https://emojipedia.org/es/  */
.cabecera>h1::before{
    content: '🚀';  /* indica que antes del titulo principal aparezca ese emoji*/ 
    margin-right: 15px;
}
.cabecera>h1::after{
    content: '🚀'; /* indica que despues del titulo principal aparezca ese emoji*/ 
    margin-left: 15px;
}

a{
    color: var(--negro);
    font-weight: bolder;
    text-decoration: underline;
}
a:hover{
    color: var(--azulFocus);
} 
main{
    text-align: center;
}

.formulario{ /*es hijo de main pk (<main> <form> </main>)*/
    margin: auto; /*centra el form al medio de la pantalla que ocupa main (si hubiera un aside no se tendria en cuenta)*/
    margin-top: 100px; /*separa 100px de la cabecera*/
    background-color: var(--violetaClaro); /*color de fondo definido desde la variable (:root)*/
    width: 70%; /*ocupa el 70% de su padre (main)*/
    height: 60vh;
    padding: 50px 0; /* aplica 50 px arriba y abajo y cero a los costados. (funciona como las agujas del reloj)*/
    font-weight: bold; /*NEGRITA*/
    color: black;
    border-radius: 5px; 
}
/* para afectar a más de un selector
con el mismo bloque de reglas
los concatenamos con una coma */
input, select{ /*ESTO selecciona a todos los input y todos los select*/ 
    margin: 5px 0 25px; /*aplica 5 arriba 0 a los costados y 25 abajo*/
    width: 50%; /*50% del largo de la caja del formulario*/
    height: 2rem; /*32 px de ancho */
    padding: .5rem; /*separa lo que esta en el place holder del borde de la caja contenedora*/
    border-radius: 5px; /*redondea*/
    outline: none;
    border: 2px solid ; /* borde solido de 2px*/
}

select{
    height: 3rem; /*ancho*/
}

input:focus, select:focus{
    border: 2px solid var(--azulFocus); 
}

/* PSEUDOCLASE 
    las pseudoclases nos sirven para expandir las definiciones sobre nuestros elementos, es decir, indicar distintas reglas para distintos estados del elemento
*/

button{
    margin-top: 25px; /*separa 25 px el boton de elemnto de arriba*/
    background-color: var(--amarillo);
    border: 1px solid var(--negro); /*borde solido*/
    padding: .5rem 1.5rem; /*espacio que ocupa la caja del boton*/
    border-radius: 35px;

    /* la propiedad TRANSITION nos deja elegir otras propiedas que sabemos que van a cambiar, y decidir en cuanto tiempo y de que forma cambian */
    transition: all .3s ease-in-out; /*cambio en tiempo de algo (en este cambia el puntero y hace zoom) con esto definimos el tiempo */
}

button:focus{ /*focaliza sobre el elemento*/
    border: 2px solid var(--azulFocus);
}

button:hover{ /*al pasar el puntero del mouse*/
    cursor: pointer; /*cambia el cursor*/
    /* la propiedad TRANSFORM acepta 
    distintas funciones que deforman un elemento
    */
    transform: scale(1.3); /*multiplica el tamaño por 1.3 (zoom)*/
    float: left;
}

.pie{ /*Clase del footer*/
    background-color: var(--amarillo); 
    position: absolute; 
    bottom: 0; /*con esta propiedad y valor siempre va a estar al fondo de la pantalla*/
    width: 100%; /*ocupa todo el largo horizontal de la pantalla*/
    height: 3rem; /*ancho vertical*/
    text-align: center; /*centra el texto*/
}

